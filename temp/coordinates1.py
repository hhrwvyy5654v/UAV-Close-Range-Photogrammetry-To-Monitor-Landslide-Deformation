import cv2
import numpy as np

# 相机内参矩阵
K = np.array([[755.39354935, 0, 504.39208928], [
             0, 754.16550667, 371.66825215], [0, 0, 1]])

# 已知的四个点的世界坐标
p_world = np.array([[0, 0, 0], [0, 200, 0], [150, 0, 0], [150, 200, 0]])


rvec = np.array(
    [[0.6160709], [0.31918769], [-3.05625136]],
    [[0.05421479], [-0.35478944], [3.10816923]],
    [[0.63120633], [-0.53283798], [3.02265851]],
    [[-0.00889303], [0.31416873], [-3.10988726]],
    [[-0.04012786], [0.14202642], [3.13231465]],
    [[0.0524515], [0.8688805], [-2.99727356]],
    [[-0.80307989], [-0.63833455], [2.96353426]],
    [[-0.80551387], [0.57597935], [-2.9190048]],
    [[0.56067102], [-0.09787448], [3.01273527]],
    [[-0.04139356], [-0.28803636], [3.12051874]],
    [[0.10592237], [0.99621715], [-2.94802917]],
    [[-0.99463588], [-0.05541256], [2.97683571]])

tvec = np.array([[4.5440656], [2.84557833], [21.9832278]],
                [[4.32816929], [2.06501245], [17.52477812]],
                [[4.82925756], [4.32195884], [16.04758798]],
                [[5.41823029], [4.38285535], [21.4956411]],
                [[5.39014105], [1.74312304], [17.49776103]],
                [[5.63547068], [2.86433755], [21.07262234]],
                [[4.96849162], [3.98883293], [24.62221634]],
                [[3.99623057], [5.7031846], [16.70025505]],
                [[5.36718989], [3.39025056], [20.79585192]],
                [[5.14095769], [3.26952519], [14.70358712]],
                [[6.22595593], [3.51393998], [25.53231768]],
                [[3.03018904], [2.12977268], [23.62621352]])

dist = np.array([2.83890589e-01, -1.65886965e+00,4.88852246e-04, -4.33686303e-04, 3.34750924e+00])

# 求解相机的外参矩阵
# retval, rvec, tvec = cv2.solvePnP(p_world, p1, K, distCoeffs=dist)

# 求解第二幅图像中已知的四个点的相机坐标系下的坐标
p_camera = cv2.projectPoints(p_world, rvec, tvec, K, distCoeffs=dist)[0]

# 求解第二幅图像中已知的四个点的世界坐标
p_world_2 = cv2.triangulatePoints(
    np.eye(3, 4), np.hstack((rvec, tvec)), p1.T, p2.T).T

# 求解第五个点在第二幅图像中的像素坐标
p5_2 = cv2.projectPoints(p_world_2[:, 4], rvec, tvec, K, distCoeffs=dist)[0]

# 求解第五个点的世界坐标
p5_world = cv2.triangulatePoints(np.eye(3, 4), np.hstack(
    (rvec, tvec)), p1.T, np.array([[p5_2[0][0], p5_2[0][1]]]).T).T

print(p5_world)
